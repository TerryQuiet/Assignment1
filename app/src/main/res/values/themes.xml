<resources xmlns:tools="http://schemas.android.com/tools">

    <style name="Base.Theme.MyApp.WhiteSurface" parent="">
        <item name="colorSurface">@color/white</item>
        <item name="colorOnSurface">@color/black</item>
        <item name="android:textColor">?attr/colorOnSurface</item>
    </style>

    <!--Base custom theme which will be shared between both light and dark theme variants-->
    <style name="Base.Theme.MyApp" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!--Material color attributes (light theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/orange_500</item>
        <item name="colorOnPrimary">@color/white</item>
        <item name="colorPrimaryVariant">@color/orange_200</item>
        <item name="colorSecondary">@color/orange_500</item>
        <item name="colorOnSecondary">@color/white</item>
        <item name="colorSecondaryVariant">@color/orange_200</item>
        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an error state for components such as-->
        <!--text fields.-->
        <item name="android:windowBackground">@color/dark_blue_500</item>
        <item name="android:colorBackground">@color/dark_blue_500</item>
        <item name="backgroundColor">@color/dark_blue_500</item>
        <item name="colorOnBackground">@color/white</item>
        <item name="colorSurface">@color/dark_blue_500</item>
        <item name="colorOnSurface">@color/white</item>
        <item name="colorError">@color/red_200</item>
        <item name="errorTextColor">@color/red_200</item>
        <item name="colorOnError">@color/black</item>


        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.MyTheme.SmallComponent</item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.MyTheme.MediumComponent</item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.MyTheme.LargeComponent</item>
        <!--Component styles-->

        <!--statusBar, icon colors overridden in 23-->
        <item name="android:statusBarColor">?attr/colorPrimary</item>



        <item name="android:windowAnimationStyle">@style/WindowAnimations</item>
        <item name="android:textColor">?attr/colorOnSurface</item>

        <item name="font">@font/open_sans</item>
        <item name="fontFamily">@font/open_sans</item>


        <!--app bar basically-->
        <item name="toolbarStyle">@style/Widget.App.Toolbar</item>
        <item name="snackbarStyle">@style/Widget.App.Snackbar</item>
        <item name="snackbarButtonStyle">@style/Widget.App.SnackbarButton</item>
        <item name="textInputStyle">@style/AppTheme.TextInputLayoutStyle</item>

    </style>


    <!--    Toolbar-->
    <style name="Widget.App.Toolbar" parent="Widget.MaterialComponents.Toolbar.Primary">
        <item name="materialThemeOverlay">@style/ThemeOverlay.MyApp.Toolbar</item>
    </style>

    <style name="ThemeOverlay.MyApp.Toolbar" parent="">
        <item name="backgroundColor">@color/dark_blue_500</item>
        <item name="colorPrimary">@color/dark_blue_500</item>
        <item name="colorPrimaryVariant">@color/dark_blue_200</item>
        <item name="colorOnPrimary">@color/white</item>
    </style>


    <!--  TextInputLayout-->
    <style name="AppTheme.TextInputLayoutStyle" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="materialThemeOverlay">@style/Base.Theme.MyApp.MaterialThemeOverlay</item>
        <item name="boxBackgroundColor">@android:color/transparent</item>
        <item name="hintTextColor">@color/gray</item>
        <item name="android:textColorHint">@color/gray</item>
        <item name="errorTextColor">@color/red_200</item>
    </style>

    <style name="Base.Theme.MyApp.MaterialThemeOverlay">
        <item name="editTextStyle">@style/AppTheme.TextInputEditTextStyle</item>
    </style>

    <style name="AppTheme.TextInputEditTextStyle" parent="@style/Widget.MaterialComponents.TextInputEditText.FilledBox">
        <item name="android:paddingStart">@dimen/extra_small_4dp</item>
        <item name="android:textColor">?attr/colorOnSurface</item>
    </style>


    <!--    Snackbar-->
    <style name="Widget.App.Snackbar" parent="Widget.MaterialComponents.Snackbar">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.Snackbar</item>
        <item name="actionTextColorAlpha">1</item>
        <item name="backgroundOverlayColorAlpha">1</item>
        <item name="android:textColor">@color/white</item>
        <item name="colorSurface">@color/white</item>
    </style>

    <style name="Widget.App.SnackbarButton" parent="Widget.MaterialComponents.Button.TextButton.Snackbar">
        <item name="android:textColor">@color/orange_500</item>
    </style>

    <style name="ThemeOverlay.App.Snackbar" parent="">
        <item name="colorOnSurface">@color/dark_blue_200</item>
        <item name="colorSurface">@color/white</item>
        <item name="android:textColor">@color/white</item>
    </style>

</resources>